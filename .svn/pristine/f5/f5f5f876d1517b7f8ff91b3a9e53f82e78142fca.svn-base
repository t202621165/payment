package com.cypay.common.pattern.template.payee.alipay;

import java.io.UnsupportedEncodingException;
import java.math.BigDecimal;
import java.net.URLEncoder;
import java.util.List;
import java.util.function.Predicate;
import java.util.stream.Collectors;

import javax.servlet.http.HttpServletRequest;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Component;
import org.springframework.util.StringUtils;

import com.cypay.common.entity.DaiFu;
import com.cypay.common.entity.SettleMentReply;
import com.cypay.common.pattern.template.payee.PayeeTemplate;
import com.cypay.common.util.CommonUtil;
import com.cypay.common.vo.Result;
import com.cypay.common.vo.SettleMentVo;

@Component
public class AlipayPayee extends PayeeTemplate {
	
	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Override
	public String mark() {
		return "alipay";
	}
	
	@Override
	protected String getSerialNumber() {
		return "A" + snowflakeIdWorker.nextId();
	}

	@Override
	protected Result init(List<SettleMentVo> settlements, DaiFu daiFu, HttpServletRequest request) {
		SettleMentReply reply = saveBatchRecord(settlements);
		
		BigDecimal batch_fee = BigDecimal.ZERO;
		String detail_data = settlements.stream().map(s -> {
			StringBuilder builder = new StringBuilder();
			BigDecimal amount = s.getAmount();
			builder.append(s.getSerialNumber()+"^");
			builder.append(s.getBankNumber()+"^");
			builder.append(s.getRealName()+"^");
			builder.append(String.format("%.2f", amount)+"^");
			builder.append(daiFu.getRemark());
			
			batch_fee.add(amount);
			return builder.toString();
		}).collect(Collectors.joining("|"));
		
		try {
			AlipayRequest alipay = new AlipayRequest(detail_data, batch_fee, settlements.size(), 
					reply.getSerialNumber(), daiFu.getPartner(), URLEncoder.encode(daiFu.getAccountName(), "UTF-8"), 
					daiFu.getEmail(), CommonUtil.getRequestDomain(request) + "/man/alipay/notify");
			alipay.MD5Sign(daiFu.getSecurityKey());
			String url = daiFu.getReqUrl() + "?" + CommonUtil.getQueryString(alipay);
			logger.info("支付宝代付连接:{}",url);
			return Result.success("如果浏览器无法弹出代付窗口,请检查浏览器是否屏蔽了URL", url);
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
		return Result.error("【支付宝】付款失败，请检查付款账户信息！");
	}

	@Override
	protected Predicate<? super SettleMentVo> getPredicate() {
		return s -> "ALI".equals(s.getMark()) && !StringUtils.isEmpty(s.getBankNumber());
	}

}
